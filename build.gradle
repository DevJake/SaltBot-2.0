buildscript {
    ext.kotlin_version = '1.1.50'
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven { url "http://dl.bintray.com/jetbrains/spek" }
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.14'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

plugins {
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.1.4"
}

apply plugin: 'org.jetbrains.dokka'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    reportsDir file("$buildDir/test-results/spek")

    filters {
        engines {
            include 'spek'
        }
    }
}

jacoco {
    reportsDir = file("$buildDir/reports/jacoco")
    toolVersion = "0.6.5.201403032054"
}

jacocoTestReport {

    group = "Report"
//
    reports {
        html.enabled true
        xml.enabled true
//        csv.enabled false

////        xml.destination = "${buildDir}/reports/spek"
////        html.destination = "${buildDir}/reports/jacoco"
    }

onlyIf = {
    true
}

}

//applicationDefaultJvmArgs = ["-Xmx400m"]
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'com.vdurmont:emoji-java:3.2.0'
    compile 'net.dv8tion:JDA:3.0.0_193'

    compile 'org.neo4j.driver:neo4j-java-driver:1.2.1'
    compile 'org.neo4j:neo4j-ogm-core:2.1.2'
    compile 'org.neo4j:neo4j-ogm-bolt-driver:2.1.2'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.0"

    testCompile "org.jetbrains.spek:spek-api:1.1.2"
    testCompile "org.jetbrains.spek:spek-junit-platform-engine:1.1.2"
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.junit.platform:junit-platform-runner:1.0.0-M4"

    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.0-M4"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.0-M4"

    testCompile "com.winterbe:expekt:0.5.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    //compile 'org.junit.jupiter:junit-jupiter-api'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "docs"

    linkMapping {
        // Source directory
        dir = "src/main/kotlin"

        // URL showing where the source code can be accessed through the web browser
        url = "https://github.com/DevJake/SaltBot-2.0/src/main/kotlin"

        // Suffix which is used to append the line number to the URL. Use #L for GitHub
        suffix = "#L"
    }

    linkMapping {
        // Source directory
        dir = "src/main/java"

        // URL showing where the source code can be accessed through the web browser
        url = "https://github.com/DevJake/SaltBot-2.0/src/main/java"

        // Suffix which is used to append the line number to the URL. Use #L for GitHub
        suffix = "#L"
    }
}

sourceSets {
    main.java.srcDirs = []
    main.kotlin.srcDirs = ['src/main/java', 'src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

mainClassName = "me.salt.Main"
version = "1.0"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

//test {
//    finalizedBy jacocoTestReport
//}

compileJava.options.encoding = 'UTF-8'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}